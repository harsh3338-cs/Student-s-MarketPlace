@model IEnumerable<StudentServicesMarketplace.Models.Service>
@using StudentServicesMarketplace.Models 

@{
    ViewData["Title"] = "Browse Student Services";
    var currentSearch = ViewData["CurrentFilter"] as string;
    var currentCategory = ViewData["CurrentCategory"] as ServiceCategory?;
}

<h1>@ViewData["Title"]</h1>
<p class="lead">Find talented students offering a variety of services.</p>

<hr />

@* Search and Filter Form *@
<form asp-action="Index" method="get" class="mb-4 p-3 bg-light border rounded">
    <div class="row g-3 align-items-end">
        <div class="col-md-5">
            <label for="searchString" class="form-label">Search Services</label>
            <input type="text" name="searchString" value="@currentSearch" class="form-control" placeholder="e.g., Math tutoring, Logo design">
        </div>
        <div class="col-md-4">
            <label for="category" class="form-label">Category</label>
            <select name="category" class="form-select" asp-for="@currentCategory" asp-items="Html.GetEnumSelectList<ServiceCategory>()">
                <option value="">All Categories</option>
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary w-100">Search</button>
            @if (!string.IsNullOrEmpty(currentSearch) || currentCategory.HasValue)
            {
                <a asp-action="Index" class="btn btn-outline-secondary w-100 mt-2">Clear Filters</a>
            }
        </div>
    </div>
</form>

@if (!Model.Any())
{
    <div class="alert alert-info mt-4" role="alert">
        No services found matching your criteria. Try adjusting your search or filters!
        @if (!string.IsNullOrEmpty(currentSearch) || currentCategory.HasValue)
        {
            <br /> <a asp-action="Index">View all services.</a>
        }
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mt-3">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Title" style="height: 200px; object-fit: cover;">
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/400x200.png?text=Service+Image" class="card-img-top" alt="Default Service Image" style="height: 200px; object-fit: cover;">
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">
                            <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none">@Html.DisplayFor(modelItem => item.Title)</a>
                        </h5>
                        <p class="card-text text-muted small">
                            Category: @Html.DisplayFor(modelItem => item.Category)
                        </p>
                        <p class="card-text flex-grow-1">
                            @* Truncate description for card view *@
                            @(item.Description.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)
                        </p>
                        <div class="d-flex justify-content-between align-items-center mt-auto">
                            <div>
                                <p class="card-text mb-0"><strong>Price: @Html.DisplayFor(modelItem => item.Price) INR</strong></p>
                                <p class="card-text text-muted small mb-0">
                                    By: @Html.DisplayFor(modelItem => item.Student.FirstName)
                                </p>
                            </div>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">View Details</a>
                        </div>
                    </div>
                    <div class="card-footer text-muted small">
                        Posted: @item.DatePosted.ToLocalTime().ToString("MMM dd, yyyy")
                    </div>
                </div>
            </div>
        }
    </div>
}